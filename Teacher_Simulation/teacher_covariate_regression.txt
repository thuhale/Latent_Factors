
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.65 (6784) x86_64-apple-darwin13.1.0]

[History restored from /Users/lehathu/.Rapp.history]

> rm(list=ls())
> # Load data
> library(XLConnect)
XLConnect 0.2-7 by Mirai Solutions GmbH
http://www.mirai-solutions.com ,
http://miraisolutions.wordpress.com
> wb <- loadWorkbook("MATH.xlsx")
> Tables <- readWorksheet(wb, sheet = "MATH", header = TRUE)
> x = Tables
> x = x[,-1]
> x = as.matrix(x)
> 
> # basic graph properties:
> dim(x)
[1] 1870   74
> table(rowSums(!is.na(x)))

  1   2   3   4   5   6   7   8   9  10  11 
594 605 233 195 146  57  29   7   2   1   1 
> table(colSums(!is.na(x)))

  1   3   5   8   9  10  13  14  15  16  17  18  19  20  23  24  27  28  31  32  34  35  36  37  38 
  2   2   3   2   1   2   1   2   1   4   2   1   4   1   2   2   1   1   2   2   1   1   1   1   1 
 44  45  46  48  49  50  55  59  60  61  65  66  75  82  84  91 102 103 107 143 164 201 250 253 267 
  2   1   2   1   2   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
291 339 523 
  1   1   1 
> mean(rowSums(!is.na(x)))
[1] 2.488235
> mean(colSums(!is.na(x)))
[1] 62.87838
> 
> #Drop student with 1 entry
> B = (!is.na(x))
> badstu = which(rowSums(B) < 2)
> badtea = which(colSums(B) < 2)
> G = x[-badstu, ]
> G = G[,-badtea]
> B = B[-badstu,]
> B = B[,-badtea]
> dim(G)
[1] 1276   72
> 
> thresh = function(a, lam){
+ 	a = a - lam
+ 	a[a<0] = 0
+ 	return(a)
+ }
> 
> lam = 590
> tmp = G
> obs = G[!is.na(G)]
> tmp[is.na(G)] = mean(G[!is.na(G)])
> 
> for( i in 1:5000){
+   s = svd(tmp)
+   s$d = thresh(s$d, lam)
+   low = s$u%*%diag(s$d)%*%t(s$v)
+   tmp[is.na(G)] = low[is.na(G)]
+   if(round(i/1000)%in% 1:100) plot(sqrt(s$d), main = paste(i))
+ }
> plot(sqrt(s$d))
> title("Analysis - Lambda = 200")
> 
> ## Normalize the matrix
> Gnorm=G
> x=mean(tmp)
> y=rowMeans(tmp)
> z=colMeans(tmp)
> 
> for(j in 1:1276){
+ 	Gnorm[j,]=Gnorm[j,]-y[j]
+ 	}
> 	
> for(k in 1:72){
+ 	Gnorm[,k]=Gnorm[,k]-z[k]
+ 	}
> Gnorm=Gnorm+x
> 
> lam1 = 550
> tmp1 = Gnorm
> obs1 = Gnorm[!is.na(Gnorm)]
> tmp1[is.na(Gnorm)] = mean(Gnorm[!is.na(Gnorm)])
> for( h in 1:5000){
+   s1 = svd(tmp1)
+   s1$d = thresh(s1$d, lam1)
+   low1 = s1$u%*%diag(s1$d)%*%t(s1$v)
+   tmp1[is.na(Gnorm)] = low1[is.na(Gnorm)]
+   if(round(h/1000)%in% 1:100) plot(sqrt(s1$d), main = paste(h))
+ }
> teacher = read.csv("teacher_list.csv")
> dim(teacher)
[1] 74  5
> 
> lm1 = lm(teacher$total_years_amt[-badtea]~s$v[,1:3])
> summary(lm1)

Call:
lm(formula = teacher$total_years_amt[-badtea] ~ s$v[, 1:3])

Residuals:
    Min      1Q  Median      3Q     Max 
-12.859  -4.942  -1.992   3.353  21.520 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)  
(Intercept)    3.936      3.837   1.026   0.3090  
s$v[, 1:3]1  -48.843     31.317  -1.560   0.1238  
s$v[, 1:3]2   16.741      9.832   1.703   0.0936 .
s$v[, 1:3]3    6.870      8.285   0.829   0.4102  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 7.739 on 63 degrees of freedom
  (5 observations deleted due to missingness)
Multiple R-squared:  0.1604,	Adjusted R-squared:  0.1204 
F-statistic: 4.011 on 3 and 63 DF,  p-value: 0.01121

> lm2 = lm(teacher$total_years_amt[-badtea]~s1$v[,1:3])
> summary(lm2)

Call:
lm(formula = teacher$total_years_amt[-badtea] ~ s1$v[, 1:3])

Residuals:
    Min      1Q  Median      3Q     Max 
-12.098  -4.689  -2.520   3.076  23.189 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)   
(Intercept)     6.394      2.199   2.908  0.00502 **
s1$v[, 1:3]1  -14.094     10.517  -1.340  0.18502   
s1$v[, 1:3]2  -30.346     14.377  -2.111  0.03877 * 
s1$v[, 1:3]3  -18.177     11.767  -1.545  0.12741   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 7.634 on 63 degrees of freedom
  (5 observations deleted due to missingness)
Multiple R-squared:  0.1831,	Adjusted R-squared:  0.1442 
F-statistic: 4.707 on 3 and 63 DF,  p-value: 0.004997

> 
> 
> 
> teacher$flagship_u = 0
> teacher$flagship_u[teacher$school_name=="University of Florida"]=1
> lm3= glm(teacher$flagship_u[-badtea]~s$v[,1:3], family = binomial)
> summary(lm3)

Call:
glm(formula = teacher$flagship_u[-badtea] ~ s$v[, 1:3], family = binomial)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-0.7703  -0.6046  -0.4937  -0.2697   2.2351  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)  -3.2691     1.6069  -2.034   0.0419 *
s$v[, 1:3]1  -8.5656    12.7411  -0.672   0.5014  
s$v[, 1:3]2  -8.2748     6.3243  -1.308   0.1907  
s$v[, 1:3]3   0.1616     3.2812   0.049   0.9607  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 54.255  on 71  degrees of freedom
Residual deviance: 51.367  on 68  degrees of freedom
AIC: 59.367

Number of Fisher Scoring iterations: 6

> lm4= glm(teacher$flagship_u[-badtea]~s1$v[,1:3], family = binomial)
> summary(lm4)

Call:
glm(formula = teacher$flagship_u[-badtea] ~ s1$v[, 1:3], family = binomial)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-0.7418  -0.5935  -0.5083  -0.3577   2.1390  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)  
(Intercept)    -2.478      1.017  -2.436   0.0148 *
s1$v[, 1:3]1    7.457      7.077   1.054   0.2920  
s1$v[, 1:3]2   -1.089      5.542  -0.197   0.8442  
s1$v[, 1:3]3    1.251      5.111   0.245   0.8066  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 54.255  on 71  degrees of freedom
Residual deviance: 51.858  on 68  degrees of freedom
AIC: 59.858

Number of Fisher Scoring iterations: 6

> 
> 
> teacher$minority = 1
> teacher$minority[teacher$racial_ethnic_cd=="W"]=0
> teacher$minority[0]=NA
> lm5= glm(teacher$minority[-badtea]~s$v[,1:3], family = binomial)
> summary(lm5)

Call:
glm(formula = teacher$minority[-badtea] ~ s$v[, 1:3], family = binomial)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-1.4685  -0.5562  -0.5131  -0.4767   2.1174  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)  -2.3163     1.2944  -1.789   0.0735 .
s$v[, 1:3]1  -4.2219    10.5505  -0.400   0.6890  
s$v[, 1:3]2  -0.6184     3.3084  -0.187   0.8517  
s$v[, 1:3]3   4.4599     2.4071   1.853   0.0639 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 61.560  on 71  degrees of freedom
Residual deviance: 57.958  on 68  degrees of freedom
AIC: 65.958

Number of Fisher Scoring iterations: 4

> lm6= glm(teacher$minority[-badtea]~s1$v[,1:3], family = binomial)
> summary(lm6)

Call:
glm(formula = teacher$minority[-badtea] ~ s1$v[, 1:3], family = binomial)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-0.9943  -0.6083  -0.5154  -0.4086   2.3966  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)
(Intercept)   -0.7519     0.6611  -1.137    0.255
s1$v[, 1:3]1  -3.2338     3.7201  -0.869    0.385
s1$v[, 1:3]2   7.1556     5.0280   1.423    0.155
s1$v[, 1:3]3   6.5779     5.1372   1.280    0.200

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 61.560  on 71  degrees of freedom
Residual deviance: 58.882  on 68  degrees of freedom
AIC: 66.882

Number of Fisher Scoring iterations: 5

> 