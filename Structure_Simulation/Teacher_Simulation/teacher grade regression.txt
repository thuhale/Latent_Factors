
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.65 (6784) x86_64-apple-darwin13.1.0]

[History restored from /Users/lehathu/.Rapp.history]

2015-07-01 13:09:24.467 R[748:96487] *** WARNING: Method convertPointFromBase: in class NSView is deprecated on 10.7 and later. It should not be used in new applications. 
> rm(list=ls())
> # Load data
> library(XLConnect)
XLConnect 0.2-7 by Mirai Solutions GmbH
http://www.mirai-solutions.com ,
http://miraisolutions.wordpress.com
> wb <- loadWorkbook("MATH.xlsx")
> Tables <- readWorksheet(wb, sheet = "MATH", header = TRUE)
> x = Tables
> x = x[,-1]
> x = as.matrix(x)
> 
> # basic graph properties:
> dim(x)
[1] 1870   74
> table(rowSums(!is.na(x)))

  1   2   3   4   5   6   7   8   9  10  11 
594 605 233 195 146  57  29   7   2   1   1 
> table(colSums(!is.na(x)))

  1   3   5   8   9  10  13  14  15  16  17  18  19  20  23  24  27  28  31  32  34  35  36  37  38 
  2   2   3   2   1   2   1   2   1   4   2   1   4   1   2   2   1   1   2   2   1   1   1   1   1 
 44  45  46  48  49  50  55  59  60  61  65  66  75  82  84  91 102 103 107 143 164 201 250 253 267 
  2   1   2   1   2   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
291 339 523 
  1   1   1 
> mean(rowSums(!is.na(x)))
[1] 2.488235
> mean(colSums(!is.na(x)))
[1] 62.87838
> 
> #Drop student with 1 entry
> B = (!is.na(x))
> badstu = which(rowSums(B) < 2)
> badtea = which(colSums(B) < 2)
> G = x[-badstu, ]
> G = G[,-badtea]
> B = B[-badstu,]
> B = B[,-badtea]
> dim(G)
[1] 1276   72
> 
> thresh = function(a, lam){
+ 	a = a - lam
+ 	a[a<0] = 0
+ 	return(a)
+ }
> 
> lam = 590
> tmp = G
> obs = G[!is.na(G)]
> tmp[is.na(G)] = mean(G[!is.na(G)])
> 
> for( i in 1:5000){
+   s = svd(tmp)
+   s$d = thresh(s$d, lam)
+   low = s$u%*%diag(s$d)%*%t(s$v)
+   tmp[is.na(G)] = low[is.na(G)]
+   if(round(i/1000)%in% 1:100) plot(sqrt(s$d), main = paste(i))
+ }
> plot(sqrt(s$d))
> title("Analysis - Lambda = 200")
> 
> ## Normalize the matrix
> Gnorm=G
> x=mean(tmp)
> y=rowMeans(tmp)
> z=colMeans(tmp)
> 
> for(j in 1:1276){
+ 	Gnorm[j,]=Gnorm[j,]-y[j]
+ 	}
> 	
> for(k in 1:72){
+ 	Gnorm[,k]=Gnorm[,k]-z[k]
+ 	}
> Gnorm=Gnorm+x
> 
> lam1 = 550
> tmp1 = Gnorm
> obs1 = Gnorm[!is.na(Gnorm)]
> tmp1[is.na(Gnorm)] = mean(Gnorm[!is.na(Gnorm)])
> for( h in 1:5000){
+   s1 = svd(tmp1)
+   s1$d = thresh(s1$d, lam1)
+   low1 = s1$u%*%diag(s1$d)%*%t(s1$v)
+   tmp1[is.na(Gnorm)] = low1[is.na(Gnorm)]
+   if(round(h/1000)%in% 1:100) plot(sqrt(s1$d), main = paste(h))
+ }
> wb2<- loadWorkbook("MATH.xlsx")
> Tables2 <- readWorksheet(wb2, sheet = getSheets(wb2))
> Year = Tables2$"Year"
> Year=Year[,-1]
> Pre_k = Tables2$"Pre-k"
> 
> age = matrix(,nrow=1870, ncol=74)
> for (i in 1:1870){
+ 	student_age = Pre_k$unique.student_birth_year[i]
+ 	for (j in 1:74){
+ 		age[i,j]= Year[i,j]-student_age
+ 		
+ 	}
+ }
> 
> teacher_grade = c(1:74)
> for (j in 1:74){
+ 	student_age = age[,j]
+ 	teacher_grade[j] = mean(student_age[!is.na(student_age)])
+ }
> lm1 = lm(teacher_grade[-badtea]~s$y[,1:3])
Error in model.frame.default(formula = teacher_grade[-badtea] ~ s$y[,  : 
  invalid type (NULL) for variable 's$y[, 1:3]'
> lm1 = lm(teacher_grade[-badtea]~s$v[,1:3])
> lm2 = lm(teacher_grade[-badtea]~s1$v[,1:3])
> summary(lm1)

Call:
lm(formula = teacher_grade[-badtea] ~ s$v[, 1:3])

Residuals:
    Min      1Q  Median      3Q     Max 
-3.0722 -0.6890 -0.1546  0.8778  2.6874 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   12.592      0.537  23.449  < 2e-16 ***
s$v[, 1:3]1   16.977      4.477   3.792 0.000320 ***
s$v[, 1:3]2    8.990      1.515   5.933 1.11e-07 ***
s$v[, 1:3]3    5.429      1.379   3.936 0.000198 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.32 on 68 degrees of freedom
Multiple R-squared:  0.4857,	Adjusted R-squared:  0.463 
F-statistic:  21.4 on 3 and 68 DF,  p-value: 7.15e-10

> summary(lm2)

Call:
lm(formula = teacher_grade[-badtea] ~ s1$v[, 1:3])

Residuals:
    Min      1Q  Median      3Q     Max 
-3.2559 -0.7305  0.0401  0.8899  2.8328 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)   12.3834     0.3438  36.017  < 2e-16 ***
s1$v[, 1:3]1 -11.0458     1.7055  -6.476 1.23e-08 ***
s1$v[, 1:3]2  14.5081     2.3224   6.247 3.13e-08 ***
s1$v[, 1:3]3   3.1960     1.9140   1.670   0.0996 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.314 on 68 degrees of freedom
Multiple R-squared:   0.49,	Adjusted R-squared:  0.4675 
F-statistic: 21.77 on 3 and 68 DF,  p-value: 5.407e-10

> 